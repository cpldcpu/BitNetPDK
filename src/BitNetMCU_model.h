// Automatically generated header file
// Date: 2024-04-23 02:01:22.062916
// Quantized model exported from pdk_Cosine_lr0.001_BitMnist_PerTensor_2bitsym_RMS_width16_16_16_bs128_epochs60.pth
// Generated by exportquant.py

#include <stdint.h>

#ifndef BITNETMCU_MODEL_H
#define BITNETMCU_MODEL_H

// Number of layers
#define NUM_LAYERS 4

// Maximum number of activations per layer
#define MAX_N_ACTIVATIONS 16

// Layer: L1
// QuantType: 2bitsym
#define L1_active
#define L1_bitperweight 2
#define L1_incoming_weights 64
#define L1_outgoing_weights 16
const uint8_t L1_weights[] = {0xaa, 0xef, 0x7a, 0xae, 0x96, 0xaa, 0xe6, 0x6a, 0xaa, 0xa6, 0x6e, 0x7e, 0x6a, 0xb9, 0xda, 0xa5, 0x65, 0xa5, 0xd6, 0xaa, 0x5f, 0x7a, 0xf6, 0xba, 0x7a, 0xe6, 0xae, 0x6a, 0xaa, 0x7a, 0xdb, 0xae, 0xea, 0xab, 0xda, 0xfd, 0x6e, 0xaa, 0xf5, 0xd5, 0xea, 0x5a, 0xe6, 0xae, 0x7f, 0xfe, 0x7a, 0xaf, 0x5e, 0xbf, 0x5e, 0xf5, 0x76, 0xbb, 0x49, 0x6a, 0x9b, 0xa6, 0xeb, 0xea, 0xee, 0xad, 0xea, 0xa9, 0x57, 0xff, 0xfa, 0xff, 0x59, 0x9f, 0xea, 0xf9, 0xee, 0xbe, 0xda, 0xba, 0x66, 0xb9, 0x5d, 0x7d, 0x77, 0xad, 0x7a, 0xfa, 0x7f, 0xa7, 0x6a, 0x9a, 0xea, 0xb5, 0xa9, 0x9b, 0xde, 0x6d, 0xd5, 0xa6, 0x56, 0xf9, 0xda, 0xad, 0xba, 0xaa, 0xba, 0xae, 0x6b, 0xeb, 0x65, 0xa9, 0xd9, 0xed, 0x7a, 0xd5, 0x5e, 0xbd, 0xe9, 0xe9, 0x99, 0xa9, 0xbe, 0xaa, 0xde, 0xea, 0x6b, 0x96, 0x77, 0x6d, 0xae, 0xb7, 0xdf, 0xf7, 0xe9, 0x6a, 0xaa, 0xaa, 0xea, 0xea, 0xee, 0x6b, 0xfa, 0xf5, 0xb6, 0xa9, 0xea, 0x57, 0xfd, 0xa5, 0xfa, 0xaa, 0xfa, 0xaa, 0x5a, 0xa9, 0x59, 0x66, 0x66, 0xa9, 0x5f, 0x67, 0x5a, 0xa5, 0xfb, 0xff, 0xe7, 0xb7, 0x6a, 0x95, 0xeb, 0xab, 0xfb, 0xb9, 0xea, 0xe9, 0xe6, 0x97, 0x9a, 0x9f, 0x5f, 0xed, 0x7d, 0xb9, 0x6a, 0x6a, 0x59, 0xa9, 0x6a, 0xab, 0xba, 0x97, 0x67, 0x59, 0xf5, 0x9d, 0xff, 0xd6, 0x9e, 0x9a, 0x56, 0xa5, 0x5a, 0x6a, 0x56, 0x95, 0xe9, 0xea, 0xdf, 0xeb, 0x57, 0x67, 0x5e, 0xaf, 0x76, 0xaa, 0x7a, 0xa6, 0x6a, 0x97, 0x6a, 0xba, 0xa5, 0x9d, 0x66, 0xea, 0xfa, 0x7f, 0x7f, 0xdd, 0x56, 0xad, 0x6a, 0x9a, 0xae, 0xf9, 0x6a, 0xe9, 0xea, 0xaa, 0x7e, 0x79, 0xe6, 0xad, 0xd6, 0xad, 0x57, 0x55, 0xad, 0x6a, 0xeb, 0xbb, 0xea, 0x9a, 0xea, 0xdf, 0x6a, 0xdb, 0xda, 0xab};
//first channel is topmost bit

// Layer: L2
// QuantType: 2bitsym
#define L2_active
#define L2_bitperweight 2
#define L2_incoming_weights 16
#define L2_outgoing_weights 16
const uint8_t L2_weights[] = {0xa9, 0xbf, 0x5d, 0xeb, 0xb6, 0xae, 0xae, 0xae, 0xbb, 0xfa, 0xa9, 0xe7, 0x6b, 0x6a, 0x6b, 0xaa, 0xbe, 0x9e, 0xb6, 0xf5, 0x6f, 0xe6, 0xaa, 0xe9, 0xea, 0xaa, 0xab, 0xba, 0xae, 0x79, 0x66, 0xba, 0xba, 0xa6, 0xf9, 0xab, 0x9b, 0xa6, 0x7a, 0xaa, 0x95, 0xa9, 0xb9, 0xab, 0xaa, 0x6f, 0xab, 0xea, 0x99, 0xae, 0xff, 0xa6, 0xaa, 0xda, 0xba, 0xfe, 0x6d, 0xaa, 0xa9, 0x9b, 0xb6, 0x99, 0xea, 0xa6};
//first channel is topmost bit

// Layer: L3
// QuantType: 2bitsym
#define L3_active
#define L3_bitperweight 2
#define L3_incoming_weights 16
#define L3_outgoing_weights 16
const uint8_t L3_weights[] = {0xea, 0x6b, 0xed, 0xaa, 0xeb, 0xa6, 0xef, 0xb9, 0x6a, 0xea, 0x79, 0xaf, 0xde, 0xee, 0xb6, 0xba, 0xa9, 0xa6, 0x9b, 0x6f, 0x9a, 0x69, 0xda, 0xaf, 0xa9, 0xaf, 0xae, 0x6b, 0xfe, 0x6b, 0xea, 0xae, 0xa9, 0x6a, 0xe9, 0xba, 0x99, 0x9f, 0xda, 0x79, 0x99, 0xba, 0x69, 0xba, 0xa6, 0x65, 0x6e, 0xe9, 0x6d, 0xab, 0xa7, 0xaa, 0x5f, 0xe6, 0x6e, 0x6b, 0xb5, 0xba, 0xaa, 0xb6, 0xab, 0xa6, 0xa6, 0x9a};
//first channel is topmost bit

// Layer: L4
// QuantType: 2bitsym
#define L4_active
#define L4_bitperweight 2
#define L4_incoming_weights 16
#define L4_outgoing_weights 10
const uint8_t L4_weights[] = {0xae, 0xb6, 0xba, 0xae, 0x6b, 0xa9, 0xaa, 0xaa, 0xba, 0xfb, 0xba, 0xaf, 0xfa, 0xaa, 0x9d, 0x7b, 0xaa, 0xb6, 0xd6, 0xaa, 0xab, 0xab, 0x9a, 0xaf, 0x6b, 0xaa, 0xaa, 0xaa, 0xab, 0xea, 0xaa, 0x96, 0xee, 0xd7, 0xbf, 0x5a, 0x6a, 0xda, 0xfa, 0xaa};
//first channel is topmost bit

#endif
